experiment: h36_ang # amass_3d, h36_ang

# data:
data_dir: datasets/  # path to the unzipped dataset directories(H36m/AMASS/3DPW)
input_n: 10  # number of model's input frames
output_n: 25  # number of model's output frames.

# model:
n_stgcnn_layers: 9  # number of stgcnn layers
n_ccnn_layers: 2  # number of layers for the Coordinate-Channel Convolution
n_tcnn_layers: 4  # number of layers for the Time-Extrapolator Convolution
ccnn_kernel_size: [1, 1]  # kernel for the C-CNN layers
tcnn_kernel_size: [3, 3]  # kernel for the Time-Extrapolator CNN layers
embedding_dim: 40  # dimensions for the coordinates of the embedding
input_dim: 3  # dimensions of the input coordinates
st_gcnn_dropout: 0.1  # st-gcnn dropout
ccnn_dropout: 0.0  # ccnn dropout
tcnn_dropout: 0.0  # tcnn dropout

# run:
mode: train  # choices=['train','test','viz']. Choose to train, test or visualize from the model. Either train, test or viz.
n_epochs: 50  # number of epochs to train
batch_size: 256  # batch size
batch_size_test: 256  # batch size for the test set
lr: 0.01  # Learning rate of the optimizer
use_scheduler: True  # use MultiStepLR scheduler
milestones: [15, 25, 35, 40]  # the epochs after which the learning rate is adjusted by gamma
gamma: 0.1  # gamma correction to the learning rate, after reaching the milestone epochs
clip_grad: null  # select max norm to clip gradients
checkpoints_dir: checkpoints/

# visualization:
visualize_from: test  # ['train','val','test']. Choose data split to visualize from(train-val-test).
actions_to_consider: all  # Actions to visualize. Choose either all or a list of actions.
n_viz: 2  # Numbers of sequences to visualize for each action
